INTRODUCTION

Remember how XMMS1 let you search your playlist in real time by pressing "j".
Now you can have the same functionality with XMMS2! xmms2_jump is a simple
XMMS2 client that provides only this feature. It is intended to be bound to an
accelerator key so you can quickly start the program, search, and get back to
what you were doing.

This is xmms2_jump version 0.03.
It is somewhere between alpha and beta quality, I hope.

For more detailed information about xmms2_jump, please see
http://code.google.com/p/xmms2-jump/
To contact the author, email dreiss.xmms2@gmail.com


INSTALLATION

xmms2_jump requires the following packages:
GCC (with g++), Make, Boost, and XMMS2.
In addition, at least one of gtkmm and ncurses is required
Please see http://code.google.com/p/xmms2-jump/wiki/Dependencies
for more details.

Just run make to compile.  Please report any compilation failures on the wiki,
and *please* include the version numbers you have for all of those libraries.
To compile without the gtk client, run "make WITHOUT_GTK=1".
To compile without the curses client, run "make WITHOUT_CURSES=1".

To install, copy xmms2_jump-makedb, xmms2_jump-query-gtk, and
xmms2_jump-query-curses to somewhere in your path.  Copy (or link)
xmms2_jump-monitor into your XMMS2 startup directory (defaults to
$HOME/.config/xmms2/startup.d) and restart XMMS2 (this will ensure that stale
indexes are not used).  Then just run "xmms2_jump-user_query.sh gtk" or
"xmms2_jump-user_query.sh curses" to start searching your currently active
playlist.  It will take a little while to start up the first time (and the
first time after you change your playlist) while it builds an index.  The index
is stored in $XDG_CACHE_HOME/xmms2_jump (or $HOME/.cache/xmms2_jump, if
XDG_CACHE_HOME is not set).


LIMITATIONS

I have only tested this program with "list" style playlists, not "queue" or
"pshuffle".  You can try them if you want, but I make no promises.

Only searching the playlist is supported, not the entire medialib (yet).

On my computer, the gtk client gets too slow once the playlist is over
about 2000 songs.  The ncurses client is fine for at least 4000.
